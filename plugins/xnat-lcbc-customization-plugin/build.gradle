/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'ingeam' at '4/24/17 12:26 PM' with Gradle 2.14.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14.1/userguide/tutorial_java_projects.html
 */
import org.gradle.internal.jvm.Jvm

// TODO: Change the group and version to values appropriate for your plugin project.
group 'org.lcbc.xnat.plugins'
version '0.1-SNAPSHOT'

// TODO: This is the minimum set of Gradle plugins required to build most XNAT plugins. You may include many others, including plugins for testing and test coverage, IDE integration, and more.
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'xnat-data-builder'


// TODO: This block is required for the 'xnat-data-builder' plugin to function.
buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven {
            url 'https://nrgxnat.jfrog.io/nrgxnat/libs-release'
            name 'XNAT Release Repository'
        }
        maven {
            url 'https://nrgxnat.jfrog.io/nrgxnat/libs-snapshot'
            name 'XNAT Snapshot Repository'
        }
    }
    dependencies {
        classpath "org.nrg.xnat.build:xnat-data-builder:1.7.2"
    }
}

// TODO: As of the 1.7.x release, XNAT is built as a Java 7-compatible (i.e. JDK 1.7) application. All plugins must be 1.7 compatible as well.
sourceCompatibility = 1.7
targetCompatibility = 1.7

// TODO: If the compiler is Java 8 or later, this checks for a Java 7 version of the primary Java run-time library. Building with post-Java 7 libraries can result in occasional compatibility issues.
def javaVersion = Jvm.current().javaVersion
if (javaVersion.java8Compatible || javaVersion.java9Compatible) {
    if (hasProperty("rt.17.jar")) {
        // Solution for bootstrap classpath warning and possible issues with compatibility with 1.7 libraries
        // was taken from this post on discuss.gradle.org: http://bit.ly/24xD9j0
        def rt17jar = getProperty("rt.17.jar")
        logger.info "Using ${rt17jar} as the bootstrap class path jar."
        gradle.projectsEvaluated {
            tasks.withType(JavaCompile) {
                options.fork = true
                options.compilerArgs << "-XDignore.symbol.file"
                options.bootClasspath = rt17jar
            }
        }
    } else {
        logger.warn "No value was set for the rt.17.jar build property, using the default bootstrap class path. You should consider setting rt.17.jar to indicate a jar file containing the Java 1.7 run-time library:\n"
        logger.warn "  ./gradlew -Prt.17.jar=rt-1.7.0_45.jar war\n"
    }
}

// TODO: This tells the compiler where to find source code. This isn't required in a standard build, but the XNAT data builder generates code from XNAT data-type schemas that the compiler needs to know about.
sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'build/xnat-generated/src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
            srcDir 'build/xnat-generated/src/main/resources'
        }
    }
}


// TODO: This provides access to all of these repositories for dependency resolution.
repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven {
        url 'http://dcm4che.org/maven2'
        name 'dcm4che Maven Repository'
    }
    maven {
        url 'https://nrgxnat.jfrog.io/nrgxnat/libs-release'
        name 'XNAT Release Repository'
    }
    maven {
        url 'https://nrgxnat.jfrog.io/nrgxnat/libs-snapshot'
        name 'XNAT Snapshot Repository'
    }
    maven {
        url 'https://nrgxnat.jfrog.io/nrgxnat/ext-release'
        name 'XNAT External Release Repository'
    }
}

// TODO: Keeping your versions as variables makes it easier to update versions when you have multiple libraries from the same framework that thus have the same version.
// TODO: These versions will change over time as XNAT development continues. Check the latest version of the XNAT template plugin or the XNAT versioning matrix page.
def vXnat = '1.7.2'
def vJunit = '4.12'
def vSpring = '4.2.9.RELEASE'
def vLog4j = '1.2.17'
def vSwagger = '2.4.0'


// TODO: This is a pretty minimal set of dependencies, so don't worry if you need to add more.
dependencies {
    compile("org.nrg.xnat:web:${vXnat}") {
        exclude group: '*'
    }
    compile("org.nrg.xnat:xnat-data-models:${vXnat}") {
        exclude group: '*'
    }
    compile("org.nrg.xdat:core:${vXnat}") {
        exclude group: '*'
    }
    compile "org.nrg:prefs:${vXnat}"
    compile "org.nrg:framework:${vXnat}"

    compile(group: 'turbine', name: 'turbine', version: '2.3.3') {
        exclude group: '*'
    }
    compile(group: 'org.apache.velocity', name: 'velocity', version: '1.7') {
        exclude group: '*'
    }

    compile "log4j:log4j:${vLog4j}"
    compile "io.springfox:springfox-swagger2:${vSwagger}"
    compile 'org.slf4j:slf4j-api:1.7.21'
    
}
